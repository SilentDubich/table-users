{"version":3,"sources":["Components/Forms/SearchForm/searchForm.module.css","commonStyles.module.css","Components/Header/headerStyles.module.css","Components/Paginator/paginatorStyles.module.css","Components/Preloader/Spinner-1.4s-3a356a.svg","Components/Preloader/preloaderStyles.module.css","Components/Forms/AddForm/addFormStyle.module.css","Components/Button/buttonStyles.module.css","Redux/API/api.js","Redux/Reducers/usersReducer.js","Components/User/userMoreInfo.js","Components/User/user.js","Components/Header/header.js","Components/Button/button.js","Components/Forms/SearchForm/searchForm.js","Components/Forms/AddForm/addForm.js","Components/Validators/validators.js","Components/Paginator/paginator.js","Components/Preloader/preloader.js","App.js","serviceWorker.js","Redux/Store/store.js","index.js","Components/User/userStyles.module.css"],"names":["module","exports","instanceLowData","axios","baseURL","instanceHighData","API","data","get","then","response","ADD_USER","uploadAllUsersAction","type","SORT_USERS","SET_PAGE","setIsFetching","bool","initialState","users","pageSize","totalUsers","portionSize","currentPage","isFetching","addingForm","errors","searchText","MoreInfo","props","className","SUser","moreInfo_container__margin","fName","moreInfo_textarea__borderNone","moreInfo_textarea__width","name","id","cols","rows","readOnly","description","address","streetAddress","city","state","zip","User","itemsClasses","SCommon","container_items__width","container_items__borders","container_items__paddings","useState","more","setMoreInfo","user_container__margin","onClick","container__flex","lName","email","phone","Header","idMethod","setIdMethod","fNameMethod","setFNameMethod","lNameMethod","setLNameMethod","emailMethod","setEmailMethod","phoneMethod","setPhoneMethod","SHeader","container_sortArrows__pointer","filter","ButtonComp","buttClasses","disabled","SButton","container_button__disabledLowOpacity","container_button__bigButton","container_button__violetButton","container__marginBottom","action","arg","title","SearchForm","searchRef","React","createRef","SSearchForm","container__displayFlex","placeholder","container_inputItem__withoutBorders","container_inputItem__paddings","onChange","text","current","value","updateText","ref","AddForm","isRequired","setIsRequied","isErrors","setIsErrors","idRef","fNameRef","lNameRef","emailRef","phoneRef","currentText","idText","fNameText","lNameText","emailText","phoneText","updateFormdata","firstName","lastName","inputClasses","SAddForm","container_input__marginRight","form","error","regNames","mail","test","tel","phoneValidator","toString","validator","setErrors","Object","keys","length","addUser","addingMode","values","map","key","errors_items__decor","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPageNumber","rightPageNumber","totalButtons","number","container_button__smallButton","setPageAction","SPaginator","Preloader","SPreloader","Preloader__position","src","Spinner","alt","AppContainer","connect","usersReducer","page","fetch","addUserAction","sortUsersAction","property","method","getUsersThunk","dataType","dispatch","a","updateFormDataAction","updateSearchText","pageNumber","setAddFormErrors","isChosen","setIsChosen","isAddingMode","setIsAddingMode","getUsers","dataLength","el","man","toUpperCase","includes","param","Boolean","window","location","hostname","match","reducers","combineReducers","newUser","sort","prev","next","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e8220682.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__displayFlex\":\"searchForm_container__displayFlex__3s-JS\",\"container_inputItem__withoutBorders\":\"searchForm_container_inputItem__withoutBorders__3xJgU\",\"container_inputItem__paddings\":\"searchForm_container_inputItem__paddings__1wwUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__flex\":\"commonStyles_container__flex__2OCSd\",\"container_items__width\":\"commonStyles_container_items__width__1_b5G\",\"container_items__borders\":\"commonStyles_container_items__borders__34jo-\",\"container_items__paddings\":\"commonStyles_container_items__paddings__3M3fN\",\"container__marginBottom\":\"commonStyles_container__marginBottom__1Hlud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_sortArrows__pointer\":\"headerStyles_container_sortArrows__pointer__1eXLx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__displayFlex\":\"paginatorStyles_container__displayFlex__35d83\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1.4s-3a356a.4b7d2a00.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader__position\":\"preloaderStyles_Preloader__position__WabzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__displayFlex\":\"addFormStyle_container__displayFlex__31KKC\",\"container_inputItem__withoutBorders\":\"addFormStyle_container_inputItem__withoutBorders__29PPJ\",\"container_inputItem__paddings\":\"addFormStyle_container_inputItem__paddings__22EcR\",\"container_input__marginRight\":\"addFormStyle_container_input__marginRight__1_s-m\",\"errors_items__decor\":\"addFormStyle_errors_items__decor__3wI17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_button__bigButton\":\"buttonStyles_container_button__bigButton__1g-al\",\"container_button__smallButton\":\"buttonStyles_container_button__smallButton__3U2wt\",\"container_button__violetButton\":\"buttonStyles_container_button__violetButton__2RrVL\",\"container_button__disabledLowOpacity\":\"buttonStyles_container_button__disabledLowOpacity__3kI3w\"};","import * as axios from \"axios\";\r\n\r\n\r\nconst instanceLowData = axios.create({\r\n    baseURL: 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\r\n})\r\nconst instanceHighData = axios.create({\r\n    baseURL: 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\r\n})\r\n\r\n\r\nexport const API = {\r\n    getUsers: (data) => {\r\n        switch (data) {\r\n            case 'low':\r\n                return instanceLowData.get().then(response => {\r\n                    return response.data\r\n                })\r\n            case 'high':\r\n                return instanceHighData.get().then(response => {\r\n                    return response.data\r\n                })\r\n        }\r\n    }\r\n}\r\n","import {API} from \"../API/api\";\r\n\r\nconst ADD_USER = 'usersReducer/addUser'\r\nexport const addUserAction = ({id, firstName, lastName, email, phone}) =>\r\n    ({type: ADD_USER, data: {id, firstName, lastName, email, phone}})\r\nconst UPLOAD_ALL_USERS = 'usersReducer/uploadAllUsers'\r\nexport const uploadAllUsersAction = data => ({type: UPLOAD_ALL_USERS, data})\r\nconst SORT_USERS = 'userReducer/sortUsers'\r\nexport const sortUsersAction = (property, method) => ({type: SORT_USERS, property, method })\r\nconst UPDATE_FORM_DATA = 'userReducer/updateFormData'\r\nexport const updateFormDataAction = data => ({type: UPDATE_FORM_DATA, data})\r\nconst UPDATE_SEARCH_TEXT = 'userReducer/updateSearchText'\r\nexport const updateSearchText = text => ({type: UPDATE_SEARCH_TEXT, text})\r\nconst SET_PAGE = 'userReducer/setPage'\r\nexport const setPageAction = pageNumber => ({type: SET_PAGE, pageNumber})\r\nconst SET_IS_FETCHING = 'userReducer/setIsFetching'\r\nexport const setIsFetching = bool => ({type: SET_IS_FETCHING, bool})\r\nconst SET_ADD_FORM_ERRORS = 'userReducer/setAddFormErrors'\r\nexport const setAddFormErrors = errors => ({type: SET_ADD_FORM_ERRORS, errors})\r\n\r\n\r\nexport const getUsersThunk = (dataType) => {\r\n    return async dispatch => {\r\n        dispatch(setIsFetching(true))\r\n        let data = await API.getUsers(dataType)\r\n        dispatch(uploadAllUsersAction(data))\r\n        dispatch(setIsFetching(false))\r\n    }\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 50,\r\n    totalUsers: 0,\r\n    portionSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    addingForm: {},\r\n    errors: {},\r\n    searchText: ''\r\n}\r\n\r\nexport const usersInstructions = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER:\r\n            let newUser = {\r\n                id: action.data.id,\r\n                firstName: action.data.firstName,\r\n                lastName: action.data.lastName,\r\n                email: action.data.email,\r\n                phone: action.data.phone,\r\n                address: {\r\n                    streetAddress: 'none',\r\n                    city: 'none',\r\n                    state: 'none',\r\n                    zip: 'none'\r\n                },\r\n                description: 'none',\r\n            }\r\n            return {...state, users: [newUser, ...state.users], totalUsers: state.users.length + 1}\r\n        case UPLOAD_ALL_USERS:\r\n            return {...state, users: [...action.data], totalUsers: action.data.length}\r\n        case SORT_USERS:\r\n            if (action.method) {\r\n                return {...state, users: [...state.users.sort((prev, next) => {\r\n                        if (prev[action.property] < next[action.property]) return -1\r\n                        if (prev[action.property] < next[action.property]) return 1\r\n                    })]}\r\n            } else {\r\n                return {...state, users: [...state.users.sort((prev, next) => {\r\n                        if (prev[action.property] > next[action.property]) return -1\r\n                        if (prev[action.property] > next[action.property]) return 1\r\n                    })]}\r\n            }\r\n        case UPDATE_FORM_DATA:\r\n            return {...state, addingForm: {...action.data}}\r\n        case UPDATE_SEARCH_TEXT:\r\n            return {...state, searchText: action.text}\r\n        case SET_PAGE:\r\n            return {...state, currentPage: action.pageNumber}\r\n        case SET_IS_FETCHING:\r\n            return {...state, isFetching: action.bool}\r\n        case SET_ADD_FORM_ERRORS:\r\n            return {...state, errors: action.errors}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport SUser from \"./userStyles.module.css\";\r\n\r\n// Выбран пользователь <b>Sue Corson</b>\r\n// Описание:\r\n//     <textarea>\r\n// et lacus magna dolor...\r\n// </textarea>\r\n// Адрес проживания: <b>9792 Mattis Ct</b>\r\n// Город: <b>Waukesha</b>\r\n// Провинция/штат: <b>WI</b>\r\n// Индекс: <b>22178</b>\r\n\r\n\r\nexport const MoreInfo = props => {\r\n    return(\r\n        <div className={SUser.moreInfo_container__margin}>\r\n            <div>\r\n                <div>\r\n                    <span>Выбран пользователь: <b>{props.props.fName}</b></span>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <span>Описание:</span>\r\n                    </div>\r\n                    <div>\r\n                        <textarea className={`${SUser.moreInfo_textarea__borderNone} ${SUser.moreInfo_textarea__width}`} name=\"\" id=\"\" cols=\"50\" rows=\"5\" readOnly={true}>{props.props.description}</textarea>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <span>Адрес проживания: <b>{props.props.address.streetAddress}</b></span>\r\n                </div>\r\n                <div>\r\n                    <span>Город: <b>{props.props.address.city}</b></span>\r\n                </div>\r\n                <div>\r\n                    <span>Провинция/штат: <b>{props.props.address.state}</b></span>\r\n                </div>\r\n                <div>\r\n                    <span>Индекс: <b>{props.props.address.zip}</b></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport SUser from \"./userStyles.module.css\"\r\nimport SCommon from \"../../commonStyles.module.css\"\r\nimport {MoreInfo} from \"./userMoreInfo\";\r\n\r\n\r\n\r\nexport const User = props => {\r\n    const itemsClasses = `${SCommon.container_items__width} ${SCommon.container_items__borders} ${SCommon.container_items__paddings}`\r\n    const [more, setMoreInfo] = useState(false)\r\n    return(\r\n        <div className={SUser.user_container__margin}>\r\n            <div onClick={() => setMoreInfo(!more)} className={SCommon.container__flex}>\r\n                <div className={itemsClasses}><span>{props.id}</span></div>\r\n                <div className={itemsClasses}><span>{props.fName}</span></div>\r\n                <div className={itemsClasses}><span>{props.lName}</span></div>\r\n                <div className={itemsClasses}><span>{props.email}</span></div>\r\n                <div className={itemsClasses}><span>{props.phone}</span></div>\r\n            </div>\r\n            <div>\r\n                {more && <MoreInfo props={{...props}}/>}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport SHeader from \"./headerStyles.module.css\"\r\nimport SCommon from \"../../commonStyles.module.css\"\r\n\r\n\r\nexport const Header = props => {\r\n    const [idMethod, setIdMethod] = useState(false)\r\n    const [fNameMethod, setFNameMethod] = useState(false)\r\n    const [lNameMethod, setLNameMethod] = useState(false)\r\n    const [emailMethod, setEmailMethod] = useState(false)\r\n    const [phoneMethod, setPhoneMethod] = useState(false)\r\n    const itemsClasses = `${SCommon.container_items__width} ${SCommon.container_items__borders} \r\n    ${SCommon.container_items__paddings} ${SHeader.container_sortArrows__pointer}`\r\n    return(\r\n        <div className={SCommon.container__flex}>\r\n            <div onClick={() => {\r\n                props.filter('id', idMethod)\r\n                setIdMethod(!idMethod)\r\n            }} className={itemsClasses}><span>id</span>{idMethod ? <span>&#9660;</span> : <span>&#9650;</span>}</div>\r\n            <div onClick={() => {\r\n                props.filter('firstName', fNameMethod)\r\n                setFNameMethod(!fNameMethod)\r\n            }} className={itemsClasses}><span>firstName</span>{fNameMethod ? <span>&#9660;</span> : <span>&#9650;</span>}</div>\r\n            <div onClick={() => {\r\n                props.filter('lastName', lNameMethod)\r\n                setLNameMethod(!lNameMethod)\r\n            }} className={itemsClasses}><span>lastName</span>{lNameMethod ? <span>&#9660;</span> : <span>&#9650;</span>}</div>\r\n            <div onClick={() => {\r\n                props.filter('email', emailMethod)\r\n                setEmailMethod(!emailMethod)\r\n            }} className={itemsClasses}><span>email</span>{emailMethod ? <span>&#9660;</span> : <span>&#9650;</span>}</div>\r\n            <div onClick={() => {\r\n                props.filter('phone', phoneMethod)\r\n                setPhoneMethod(!phoneMethod)\r\n            }} className={itemsClasses}><span>phone</span>{phoneMethod ? <span>&#9660;</span> : <span>&#9650;</span>}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport SButton from \"./buttonStyles.module.css\"\r\nimport SCommon from \"../../commonStyles.module.css\";\r\n\r\n\r\n\r\n\r\nexport const ButtonComp = props => {\r\n    const buttClasses = `${props.disabled && SButton.container_button__disabledLowOpacity} \r\n    ${SButton.container_button__bigButton} \r\n    ${SButton.container_button__violetButton} ${SCommon.container__marginBottom}`\r\n    return(\r\n        <div>\r\n            <button className={buttClasses} disabled={props.disabled} onClick={() => props.action(props.arg)}><span>{props.title}</span></button>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport SSearchForm from \"./searchForm.module.css\"\r\nimport SCommon from \"../../../commonStyles.module.css\"\r\n\r\n\r\nexport const SearchForm = props => {\r\n    let searchRef = React.createRef()\r\n    const updateText = () => {\r\n        let text = searchRef.current.value\r\n        props.updateText(text)\r\n    }\r\n    return(\r\n        <div className={`${SCommon.container__marginBottom} ${SSearchForm.container__displayFlex}`}>\r\n            <input placeholder={'Поиск'} className={`${SSearchForm.container_inputItem__withoutBorders} ${SSearchForm.container_inputItem__paddings}`} onChange={updateText} value={props.text} ref={searchRef}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {ButtonComp} from \"../../Button/button\";\r\nimport SAddForm from \"./addFormStyle.module.css\"\r\nimport {validator} from \"../../Validators/validators\";\r\nimport SCommon from \"../../../commonStyles.module.css\"\r\nimport {SearchForm} from \"../SearchForm/searchForm\";\r\n\r\n\r\nexport const AddForm = props => {\r\n    const [isRequired, setIsRequied] = useState(false)\r\n    const [isErrors, setIsErrors] = useState(false)\r\n    let idRef = React.createRef()\r\n    let fNameRef = React.createRef()\r\n    let lNameRef = React.createRef()\r\n    let emailRef = React.createRef()\r\n    let phoneRef = React.createRef()\r\n    // Обновляет данные с формы в редюсере\r\n    const currentText = () => {\r\n        let idText = idRef.current.value\r\n        let fNameText = fNameRef.current.value\r\n        let lNameText = lNameRef.current.value\r\n        let emailText = emailRef.current.value\r\n        let phoneText = phoneRef.current.value\r\n        props.updateFormdata({id: idText, firstName: fNameText, lastName: lNameText, email: emailText, phone: phoneText})\r\n    }\r\n\r\n    const addUser = (data) => {\r\n        let error = {}\r\n        setIsRequied(false)\r\n        if (idRef.current.value && fNameRef.current.value && lNameRef.current.value && emailRef.current.value && phoneRef.current.value) {\r\n            error = validator({id: data.id, fName: data.firstName, lName: data.lastName, email: data.email, phone: data.phone})\r\n            props.setErrors(error)\r\n            if (Object.keys(error).length === 0) {\r\n                props.addUser(data)\r\n                props.updateFormdata({id: '', firstName: '', lastName: '', email: '', phone: ''})\r\n                props.addingMode(false)\r\n            } else {\r\n                setIsErrors(true)\r\n            }\r\n        } else {\r\n            setIsRequied(true)\r\n        }\r\n    }\r\n    const inputClasses = `${SAddForm.container_inputItem__withoutBorders} ${SAddForm.container_inputItem__paddings}`\r\n    return(\r\n        <div className={SCommon.container__marginBottom}>\r\n            <div className={SAddForm.container__displayFlex}>\r\n                <div className={`${SAddForm.container_input__marginRight}`}>\r\n                    <input className={inputClasses} placeholder={'id'} onChange={currentText} value={props.form.id} ref={idRef}/>\r\n                </div>\r\n                <div className={`${SAddForm.container_input__marginRight}`}>\r\n                    <input className={inputClasses} placeholder={'firstName'} onChange={currentText} value={props.form.fName} ref={fNameRef}/>\r\n                </div>\r\n                <div className={`${SAddForm.container_input__marginRight}`}>\r\n                    <input className={inputClasses} placeholder={'lastName'} onChange={currentText} value={props.form.lName} ref={lNameRef}/>\r\n                </div>\r\n                <div className={`${SAddForm.container_input__marginRight}`}>\r\n                    <input className={inputClasses} placeholder={'email'} onChange={currentText} value={props.form.email} ref={emailRef}/>\r\n                </div>\r\n                <div className={`${SAddForm.container_input__marginRight}`}>\r\n                    <input className={inputClasses} placeholder={'phone'} onChange={currentText} value={props.form.phone} ref={phoneRef}/>\r\n                </div>\r\n                <ButtonComp title={'Добавить в таблицу'} action={addUser} arg={props.form}/>\r\n                <ButtonComp title={'Отмена'} action={props.addingMode} arg={false}/>\r\n\r\n            </div>\r\n            {isErrors && Object.values(props.error).map(key => {\r\n                return (\r\n                    <div className={SAddForm.errors_items__decor}><span>{key}</span></div>\r\n                )\r\n            })}\r\n            {isRequired && <div className={SAddForm.errors_items__decor}><span>Все поля обязательны !</span></div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const mailValidator = text => {\r\n    let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n    return reg.test(text)\r\n}\r\n\r\nexport const phoneValidator = phone => {\r\n    let reg = /\\(\\d{3}\\)\\d{3}-\\d{4}/\r\n    return reg.test(phone)\r\n}\r\n\r\nexport const validator = ({id, fName, lName, email, phone}) => {\r\n    let error = {}\r\n    let regId = /[0-9]/\r\n    let regNames = /[a-z, A-Z]/\r\n    let mail = mailValidator(email)\r\n    let tel = phoneValidator(phone)\r\n    if (!regId.test(id.toString())) error.id = 'Значение id должно состоять только из цифр !'\r\n    if (!regNames.test(fName)) error.fName = 'Значение firstName не должно содержать цифр !'\r\n    if (!regNames.test(lName)) error.lName = 'Значение lastName не должно содержать цифр !'\r\n    if (!mail) error.email = 'Не тот формат ввода email ! формат x@y.z'\r\n    if (!tel) error.phone = 'Не тот формат ввода номера телефона ! формат (xxx)yyy-zzzz'\r\n    return error\r\n}\r\n","import React, {useState} from \"react\";\r\nimport SButton from \"../Button/buttonStyles.module.css\"\r\nimport SPaginator from \"./paginatorStyles.module.css\"\r\nimport SCommon from \"./../../commonStyles.module.css\"\r\n\r\n\r\n\r\n\r\nexport const Paginator = props => {\r\n    let pagesCount = Math.ceil(props.totalUsers / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    // debugger\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPageNumber = (portionNumber - 1) * props.portionSize\r\n    let rightPageNumber = portionNumber * props.portionSize;\r\n    const buttClasses = `${SButton.container_button__violetButton} ${SCommon.container__marginBottom}`\r\n    let totalButtons = pages\r\n        .filter(number => number > leftPageNumber && number <= rightPageNumber)\r\n        .map(number => <button\r\n            className={`${buttClasses} ${SButton.container_button__smallButton}`}\r\n            onClick={() => props.setPageAction(number)}\r\n            >{number}</button>);\r\n\r\n    return(\r\n        <div className={SPaginator.container__displayFlex}>\r\n            <div><button className={`${buttClasses} ${SButton.container_button__bigButton}`} disabled={portionNumber === 1} onClick={() => setPortionNumber(portionNumber - 1)}>Пред.</button></div>\r\n            <div>{totalButtons}</div>\r\n            <div>{portionNumber < portionCount && <button className={`${buttClasses} ${SButton.container_button__bigButton}`} onClick={() => setPortionNumber(portionNumber + 1)}>След.</button>}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Spinner from \"./Spinner-1.4s-3a356a.svg\"\r\nimport SPreloader from \"./preloaderStyles.module.css\"\r\n\r\nexport const Preloader = props => {\r\n    return(\r\n        <div>\r\n            <img className={`${SPreloader.Preloader__position}`} src={Spinner} alt=\"Preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport {\n    addUserAction,\n    getUsersThunk, setAddFormErrors, setIsFetching, setPageAction,\n    sortUsersAction,\n    updateFormDataAction,\n    updateSearchText\n} from \"./Redux/Reducers/usersReducer\";\nimport {User} from \"./Components/User/user\";\nimport {Header} from \"./Components/Header/header\";\nimport {ButtonComp} from \"./Components/Button/button\";\nimport SCommon from \"./commonStyles.module.css\"\nimport {AddForm} from \"./Components/Forms/AddForm/addForm\";\nimport {SearchForm} from \"./Components/Forms/SearchForm/searchForm\";\nimport {Paginator} from \"./Components/Paginator/paginator\";\nimport {Preloader} from \"./Components/Preloader/preloader\";\n\nexport const App = (props) => {\n    const [isChosen, setIsChosen] = useState(false)\n    const [isAddingMode, setIsAddingMode] = useState(false)\n    //Отправляет запрос на получение пользователей\n    const getUsers = dataLength => {\n        props.getUsersThunk(dataLength)\n        setIsChosen(true)\n    }\n    let users = []\n        users = props.users\n            // Первая строка фильтра позволяет искать нужную строку по всему массиву\n            .filter((el, i) => props.searchText.length !== 0 ||\n                i >= (props.pageSize * (props.page - 1)) && i < (props.pageSize * props.page) && el)\n            .map( (el, i) => {\n                let man = el.id + ' ' + el.firstName + ' ' + el.lastName + ' ' + el.email + ' ' + el.phone\n                if (props.searchText.length === 0 || man.toUpperCase().includes(props.searchText.toUpperCase()))\n                {\n                    return <User id={el.id} fName={el.firstName} lName={el.lastName} email={el.email}\n                                 phone={el.phone} address={el.address} description={el.description}/>\n                }\n            })\n    // По нажатию на стрелку сортирует столбец param - название столбца, method - по возрастанию или по убыванию\n    const filter = (param, method) => {\n        props.sortUsersAction(param, method)\n    }\n    if (props.fetch) return <Preloader/>\n    return (\n        <div>\n            <div className={SCommon.container__flex}>\n                {!isChosen && <ButtonComp disabled={props.fetch} title={'Малый объем данных'} action={getUsers} arg={'low'}/> }\n                {!isChosen && <ButtonComp disabled={props.fetch} title={'Большой объем данных'} action={getUsers} arg={'high'}/>}\n                {isChosen && isAddingMode && <AddForm setErrors={props.setAddFormErrors} error={props.errors} addingMode={setIsAddingMode} addUser={props.addUserAction} form={props.addingForm} updateFormdata={props.updateFormDataAction}/>}\n                {isChosen && !isAddingMode && <ButtonComp title={'Добавить'} action={setIsAddingMode} arg={true}/>}\n            </div>\n            <div>\n                {isChosen && <Paginator setPageAction={props.setPageAction} totalUsers={props.totalUsers} portionSize={props.portionSize} pageSize={props.pageSize}/>}\n                {isChosen && <SearchForm text={props.searchText} updateText={props.updateSearchText}/>}\n                {isChosen && <Header filter={filter}/>}\n                {isChosen && users}\n            </div>\n        </div>\n\n    );\n}\n\n\nlet mapStateToProps = state => {\n    return {\n        users: state.usersReducer.users,\n        pageSize: state.usersReducer.pageSize,\n        addingForm: state.usersReducer.addingForm,\n        searchText: state.usersReducer.searchText,\n        totalUsers: state.usersReducer.totalUsers,\n        portionSize: state.usersReducer.portionSize,\n        page: state.usersReducer.currentPage,\n        fetch: state.usersReducer.isFetching,\n        errors: state.usersReducer.errors\n    }\n}\n\n\nexport const AppContainer = connect(mapStateToProps,\n    {addUserAction, sortUsersAction, getUsersThunk, updateFormDataAction, updateSearchText,\n        setPageAction, setIsFetching, setAddFormErrors})(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {usersInstructions} from \"../Reducers/usersReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    usersReducer: usersInstructions\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nwindow.store = store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App, AppContainer} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Redux/Store/store\";\n\nReactDOM.render(\n  // <React.StrictMode>\n      <Provider store={store}>\n          {/*<App />*/}\n          <AppContainer />\n      </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moreInfo_container__margin\":\"userStyles_moreInfo_container__margin__1cHZe\",\"user_container__margin\":\"userStyles_user_container__margin__3n1Gz\",\"moreInfo_textarea__width\":\"userStyles_moreInfo_textarea__width__142wv\",\"moreInfo_textarea__borderNone\":\"userStyles_moreInfo_textarea__borderNone__sOFyV\"};"],"sourceRoot":""}